// Але є ще й третій тип кроків — хуки. 
// Це опціональні кроки, які виглядають як звичайні методи, але взагалі не містять коду. 
// Шаблонний метод залишиться робочим, навіть якщо жоден підклас не перевизначить такий хук. 
// Підсумовуючи сказане, хук дає підкласам додаткові точки «вклинювання» в хід шаблонного методу.

// Шаблонний метод повинен бути заданий у базовому класі.
// Він складається з викликів методів у певному порядку, а також винесенням дублюючого коду в суперклас.
// Здебільшого, ці методи є кроками якогось алгоритму.
void main(List<String> args) {
  Car one = PetrolCar();

  one.execute();

  print("="*20);

  Car two = ElectroCar();

  two.execute();
  
}

abstract class Car{
  void body(){
    print("Корпус машини...");
  }
  void wheels(){
    print("4 колеса...");
  }
  void engine();

  void execute(){
    body();
    engine();
    wheels();
  }
}

class ElectroCar extends Car{
  @override
  void engine() {
    print("Електричний двигун!");
  }
}

class PetrolCar extends Car{
  @override
  void engine() {
    print("Бензиновий двигун!");
  }
}